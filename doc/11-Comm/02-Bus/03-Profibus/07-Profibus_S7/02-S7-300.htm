<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<title>S7-300</title>
<link href="mnp.css" rel="stylesheet" type="text/css" />
</head>

<body>
<h3>	通过CM1243-5实现S7-1200与S7-300之间的S7通信</h3>
<p>使用 STEP7 V12，CM1243-5 的 DP 通信接口可以做 S7 通信的客户端或服务器；S7-1200 仅支持 S7 单边通信；CM1243-5 与 S7-300 之间的 S7 通信仅需在作为客户端的一边进行组态连接和编程，而服务器端只需要准备好通信数据块即可。</p>
<p>以下例子描述了 CM1243-5 与 S7-300 之间的 S7 通信的两种方式：</p>
<p>一、CM1243-5 与 S7-300 CPU 集成 DP 接口的 S7 通信；</p>
<p>二、CM1243-5 与 CP342-5 之间的 S7 通信。</p>
<h3>一、CM1243-5 与 S7-300 CPU 集成 DP 口的 S7 通信</h3>
硬件和软件需求
<p> <strong>硬件：</strong><br />
  ① 1台 1215C + 1台 CM1243-5<br />
  ② 1台 CPU315-2DP<br />
  ③ DP 接头及 DP电缆<br />
  ④ PC（带以太网卡）<br />
  ⑤ 以太网电缆，PC adapter 编程电缆<br />
  <br />
  <strong>软件：</strong><br />
  ① TIA PORTAL V12 SP1 Update2<br />
  <br />
  <strong>所完成的通信任务：</strong><br />
  CM1243-5 作为客户端创建 S7 连接，将数据块 DB3 中的10个字节发送到 CPU315-2DP 的数据块 DB1 中；同时，读取 CPU315-2DP 数据块 DB2 中的10个字节存储到 1215C 的数据块 DB4 中。</p>
<h4>CM1243-5 作为客户端</h4>
<h4><strong>1.	使用 STEP7 V12 软件新建一个项目并完成硬件配置</strong></h4>
<p>在项目树“设备和网络”&gt;“网络视图”视图下，创建两个设备的 PROFIBUS 连接。用鼠标点中 PLC1 上的 CM1243-5 DP 通信口的粉色小方框，然后拖拽出一条线到 PLC2 上的 CPU315-2DP 通信口上，松开鼠标，连接建立。</p>
<h4> <strong>2.	组态 S7 连接</strong></h4>
<p>打开“网络视图”配置网络，首先点中左上角的“连接”图标，选择“S7 连接”，然后选中 PLC1 上的 CPU，鼠标右键选择“添加新连接”。如图1所示。 </p>
<p><img src="images/2-01.jpg" width="603" height="389" /><br />
    <br />
图1. 添加 S7 连接</p>
<p>然后在“创建新连接”窗口中，选择“PLC2”，并在右侧窗口中选择本地接口“CM1243-5，DP 接口”，最后再点击“添加”建立 S7 连接。如图2所示。</p>
<p><img src="images/2-02.jpg" width="812" height="425" /></p>
<p>图2. 建立 S7 连接</p>
<p>“S7_连接_1”为建立的连接，选中连接，在属性的“常规”条目中可查看该 S7 连接的相关信息。如图3所示。</p>
<p><img src="images/2-03.jpg" width="714" height="631" /></p>
<p>图3.  S7 连接信息</p>
<p>点击“特殊连接属性”，确认 S7 连接由 PLC1 主动建立连接（即 PLC1 为客户端）。如图4所示。</p>
<p><img src="images/2-04.jpg" width="671" height="267" /></p>
<p>图4. PLC1 作为客户端 </p>
<p>配置完网络连接，编译保存并下载。在线后可查看通信连接状态。如图5所示。</p>
<p><img src="images/2-05.jpg" width="752" height="346" /></p>
<p>图5. 通信连接状态  </p>
<h4><strong>3.	软件编程</strong></h4>
<p><strong><br />
  <br />
  </strong>分别在 PLC1 中创建发送数据块 DB3 和接收数据块 DB4 ，在 PLC2 中创建接收数据块 DB1 和发送数据块 DB2 ，均定义为10字节的长度，并在 DB 块的“属性”中取消“优化的块访问”，编译并保存。如图6所示。</p>
<p><img src="images/2-06.jpg" width="636" height="344" /></p>
<p>图6. DB 块属性设置 </p>
<p>在 PLC1 的 OB1 主程序中，从“指令”&gt;“通信”&gt;“S7 通信”下，调用 GET、PUT 通信指令，编译保存并下载。程序调用如图7所示。</p>
<p><img src="images/2-07.jpg" width="761" height="570" /><br />
    <br />
  图7. 程序调用<br />
</p>
<table width="567" border="0">
  <tbody>
    <tr>
      <td width="129">CALL “PUT”</td>
      <td width="167">, %DB1</td>
      <td width="257">//调用 PUT，使用背景DB块：DB1</td>
    </tr>
    <tr>
      <td>REQ </td>
      <td>：=%M0.5</td>
      <td>//系统时钟 1秒脉冲 </td>
    </tr>
    <tr>
      <td>ID </td>
      <td>：=W#16#100</td>
      <td>//连接号，要与连接配置中一致，创建连接时的本地连接号</td>
    </tr>
    <tr>
      <td>DONE </td>
      <td>：=%M2.0</td>
      <td>// 为1时，发送完成</td>
    </tr>
    <tr>
      <td>ERROR </td>
      <td>：=%M2.1</td>
      <td>// 为1时，有故障发生</td>
    </tr>
    <tr>
      <td>STATUS </td>
      <td>：=%MW4</td>
      <td>// 状态代码</td>
    </tr>
    <tr>
      <td>ADDR_1 </td>
      <td>：=P#DB1.DBX0.0 BYTE 10 </td>
      <td>// 发送到通信伙伴数据区的地址</td>
    </tr>
    <tr>
      <td>SD_1</td>
      <td>：=P#DB3.DBX0.0 BYTE 10 </td>
      <td>// 本地发送数据区</td>
    </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<table width="569" border="0">
  <tbody>
    <tr>
      <td width="130">CALL “GET” </td>
      <td width="167">, %DB2</td>
      <td width="258">//调用 GET，使用背景DB块：DB2</td>
    </tr>
    <tr>
      <td>REQ　</td>
      <td>：=%M0.5</td>
      <td>//系统时钟 1秒脉冲 </td>
    </tr>
    <tr>
      <td>ID </td>
      <td>：=W#16#100</td>
      <td>//连接号，要与连接配置中一致，创建连接时的本地连接号</td>
    </tr>
    <tr>
      <td>NDR </td>
      <td>：=%M2.2</td>
      <td>//为1时，接收到新数据</td>
    </tr>
    <tr>
      <td>ERROR </td>
      <td>：=%M2.3 </td>
      <td>//为1时，有故障发生</td>
    </tr>
    <tr>
      <td>STATUS</td>
      <td>：=%MW6</td>
      <td>//状态代码</td>
    </tr>
    <tr>
      <td>ADDR_1</td>
      <td>：=P#DB2.DBX0.0 BYTE 10 </td>
      <td>//从通信伙伴数据区读取数据的地址</td>
    </tr>
    <tr>
      <td>RD_1</td>
      <td>：=P#DB4.DBX0.0 BYTE 10 </td>
      <td>//本地接收数据地址</td>
    </tr>
  </tbody>
</table>
<h4><strong>4.	监控结果</strong></h4>
<p>通过在 S7-1200 侧编程进行 S7 通信，实现两个 CPU 之间的数据交换，监控结果如图8所示。</p>
<p><img src="images/2-08.jpg" width="762" height="499" /></p>
<p>图8. 监控结果</p>
<h3>二、CM1243-5 与 CP342-5 的 S7 通信</h3>
<h4> 硬件和软件需求</h4>
<p>  	<strong>硬件：</strong><br />
  ① 1台 1215C + 1台 CM1243-5<br />
  ② 1台 CPU314C + 1台 CP342-5<br />
  ③ DP 接头及 DP电缆<br />
④ PC（带以太网卡）<br />
⑤ 以太网电缆，PC adapter 编程电缆<br />
  <br />
  <strong>软件：</strong><br />
  ① TIA PORTAL V12 SP1 Update2<br />
  <br />
  <strong>所完成的通信任务：</strong><br />
  ① CM1243-5 作为客户端创建 S7 连接，将数据块 DB3 中的10个字节发送到 CPU314C 的数据块 DB1 中；同时，读取 CPU314C 数据块 DB2 中的10个字节存储到 1215C 的数据块 DB4 中。<br />
② CP342-5 作为客户端创建 S7 连接，将数据块 DB3 中的10个字节发送到 1215C 的数据块 DB1 中；同时，读取 1215C 数据块 DB2 中的10个字节存储到 CPU314C 的数据块 DB4 中。</p>
<h4>① CM1243-5 作为客户端</h4>
<h4><strong>1.	使用 STEP7 V12 软件新建一个项目并完成硬件配置</strong></h4>
<p>在项目树“设备和网络”&gt;“网络视图”视图下，创建两个设备的 PROFIBUS 连接。用鼠标点中 PLC1 上的 CM1243-5 DP 通信口的粉色小方框，然后拖拽出一条线到 PLC2 上的 CP342-5 通信口上，松开鼠标，连接建立。</p>
<h4>  <strong>2.	组态 S7 连接</strong></h4>
<p>打开“网络视图”配置网络，首先点中左上角的“连接”图标，选择“S7 连接”，然后选中 PLC1 上的 CPU，鼠标右键选择“添加新连接”。如图9所示。 </p>
<p><img src="images/2-09.jpg" width="597" height="379" /><br />
  <br />
图9. 添加 S7 连接</p>
<p>然后在“创建新连接”窗口中，选择“PLC2”，并在右侧窗口中选择本地接口“CM1243-5，DP 接口”，最后再点击“添加”建立 S7 连接。如图10所示。</p>
<p><img src="images/2-10.jpg" width="813" height="424" /></p>
<p>图10. 建立 S7 连接</p>
<p>“S7_连接_1”为建立的连接，选中连接，在属性的“常规”条目中可查看该 S7 连接的相关信息。如图11所示。</p>
<p><img src="images/2-11.jpg" width="723" height="612" /></p>
<p>图11.  S7 连接信息</p>
<p>点击“特殊连接属性”，确认 S7 连接由 PLC1 主动建立连接（即 PLC1 为客户端）。如图12所示。</p>
<p><img src="images/2-12.jpg" width="698" height="250" /></p>
<p>图12. PLC1 作为客户端 </p>
<p>配置完网络连接，编译保存并下载。在线后可查看通信连接状态。如图13所示。</p>
<p><img src="images/2-13.jpg" width="739" height="361" /></p>
<p>图13. 通信连接状态<br />
  </p>
<h4><strong>3.	软件编程<br />
  </strong></h4>
<p>分别在 PLC1 中创建发送数据块 DB3 和接收数据块 DB4 ，在 PLC2 中创建接收数据块 DB1 和发送数据块 DB2 ，均定义为10字节的长度，并在 DB 块的“属性”中取消“优化的块访问”，编译并保存。如图14所示。</p>
<p><img src="images/2-14.jpg" width="636" height="345" /></p>
<p>图14. DB 块属性设置 </p>
<p>在 PLC1 的 OB1 主程序中，从“指令”&gt;“通信”&gt;“S7 通信”下，调用 GET、PUT 通信指令，编译保存并下载。程序调用如图15所示。</p>
<p><img src="images/2-15.jpg" width="760" height="570" /><br />
  <br />
  图15. 程序调用<br />
</p>
<table width="567" border="0">
  <tbody>
    <tr>
      <td width="129">CALL “PUT”</td>
      <td width="167">, %DB1</td>
      <td width="257">//调用 PUT，使用背景DB块：DB1</td>
    </tr>
    <tr>
      <td>REQ </td>
      <td>：=%M0.5</td>
      <td>//系统时钟 1秒脉冲 </td>
    </tr>
    <tr>
      <td>ID </td>
      <td>：=W#16#100</td>
      <td>//连接号，要与连接配置中一致，创建连接时的本地连接号</td>
    </tr>
    <tr>
      <td>DONE </td>
      <td>：=%M2.0</td>
      <td>// 为1时，发送完成</td>
    </tr>
    <tr>
      <td>ERROR </td>
      <td>：=%M2.1</td>
      <td>// 为1时，有故障发生</td>
    </tr>
    <tr>
      <td>STATUS </td>
      <td>：=%MW4</td>
      <td>// 状态代码</td>
    </tr>
    <tr>
      <td>ADDR_1 </td>
      <td>：=P#DB1.DBX0.0 BYTE 10 </td>
      <td>// 发送到通信伙伴数据区的地址</td>
    </tr>
    <tr>
      <td>SD_1</td>
      <td>：=P#DB3.DBX0.0 BYTE 10 </td>
      <td>// 本地发送数据区</td>
    </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<table width="569" border="0">
  <tbody>
    <tr>
      <td width="130">CALL “GET” </td>
      <td width="167">, %DB2</td>
      <td width="258">//调用 GET，使用背景DB块：DB2</td>
    </tr>
    <tr>
      <td>REQ　</td>
      <td>：=%M0.5</td>
      <td>//系统时钟 1秒脉冲 </td>
    </tr>
    <tr>
      <td>ID </td>
      <td>：=W#16#100</td>
      <td>//连接号，要与连接配置中一致，创建连接时的本地连接号</td>
    </tr>
    <tr>
      <td>NDR </td>
      <td>：=%M2.2</td>
      <td>//为1时，接收到新数据</td>
    </tr>
    <tr>
      <td>ERROR </td>
      <td>：=%M2.3 </td>
      <td>//为1时，有故障发生</td>
    </tr>
    <tr>
      <td>STATUS</td>
      <td>：=%MW6</td>
      <td>//状态代码</td>
    </tr>
    <tr>
      <td>ADDR_1</td>
      <td>：=P#DB2.DBX0.0 BYTE 10 </td>
      <td>//从通信伙伴数据区读取数据的地址</td>
    </tr>
    <tr>
      <td>RD_1</td>
      <td>：=P#DB4.DBX0.0 BYTE 10 </td>
      <td>//本地接收数据地址</td>
    </tr>
  </tbody>
</table>
<h4><strong>4.	监控结果</strong></h4>
<p>通过在 S7-1200 侧编程进行 S7 通信，实现两个 CPU 之间的数据交换，监控结果如图16所示。</p>
<p><img src="images/2-16.jpg" width="765" height="502" /></p>
<p>图16. 监控结果</p>
<h3>② CP342-5 作为客户端</h3>
<h4><strong>1.	使用 STEP7 V12 软件新建一个项目并完成硬件配置</strong></h4>
<p>在项目树“设备和网络”&gt;“网络视图”视图下，创建两个设备的 PROFIBUS 连接。用鼠标点中 PLC1 上的 CM1243-5 DP 通信口的粉色小方框，然后拖拽出一条线到 PLC2 上的 CP342-5 通信口上，松开鼠标，连接建立。</p>
<h4> <strong>2.	组态 S7 连接</strong></h4>
<p>打开“网络视图”配置网络，首先点中左上角的“连接”图标，选择“S7 连接”，然后选中 PLC2 上的 CPU，鼠标右键选择“添加新连接”。如图17所示。 </p>
<p><img src="images/2-17.jpg" width="599" height="398" /><br />
    <br />
图17. 添加 S7 连接</p>
<p>然后在“创建新连接”窗口中，选择“PLC1”，并在右侧窗口中选择本地接口“CP342-5_1”，最后再点击“添加”建立 S7 连接。如图18所示。</p>
<p><img src="images/2-18.jpg" width="813" height="428" /></p>
<p>图18. 建立 S7 连接</p>
<p>“S7_连接_1”为建立的连接，选中连接，在属性的“常规”条目中可查看该 S7 连接的相关信息。如图19所示。</p>
<p><img src="images/2-19.jpg" width="714" height="612" /></p>
<p>图19.  S7 连接信息</p>
<p>点击“特殊连接属性”，确认 S7 连接由 PLC2 主动建立连接（即 PLC2 为客户端）。如图20所示。</p>
<p><img src="images/2-20.jpg" width="715" height="253" /></p>
<p>图20. PLC2 作为客户端 </p>
<p>配置完网络连接，编译保存并下载。在线后可查看通信连接状态。如图21所示。</p>
<p><img src="images/2-21.jpg" width="759" height="362" /></p>
<p>图21. 通信连接状态</p>
<h4><strong>3.	软件编程</strong></h4>
<p><strong><br />
  </strong>分别在 PLC1 中创建发送数据块 DB1 和接收数据块 DB2 ，在 PLC2 中创建接收数据块 DB3 和发送数据块 DB4 ，均定义为10字节的长度，并在 DB 块的“属性”中取消“优化的块访问”，编译并保存。如图22所示。</p>
<p><img src="images/2-22.jpg" width="648" height="351" /></p>
<p>图22. DB 块属性设置 </p>
<p>在 PLC2 的 OB1 主程序中，从“指令”&gt;“通信”&gt;“S7 通信”&gt;“其它”下，调用 GET_S、PUT_S 通信指令，编译保存并下载。程序调用如图23所示。</p>
<p><img src="images/2-23.jpg" width="707" height="574" /><br />
    <br />
  图23. 程序调用<br />
</p>
<table width="567" border="0">
  <tbody>
    <tr>
      <td width="129">CALL “PUT”</td>
      <td width="167">, %DB1</td>
      <td width="257">//调用 PUT，使用背景DB块：DB1</td>
    </tr>
    <tr>
      <td>REQ </td>
      <td>：=%M0.5</td>
      <td>//系统时钟 1秒脉冲 </td>
    </tr>
    <tr>
      <td>ID </td>
      <td>：=W#16#1</td>
      <td>//连接号，要与连接配置中一致，创建连接时的本地连接号</td>
    </tr>
    <tr>
      <td>DONE </td>
      <td>：=%M2.0</td>
      <td>// 为1时，发送完成</td>
    </tr>
    <tr>
      <td>ERROR </td>
      <td>：=%M2.1</td>
      <td>// 为1时，有故障发生</td>
    </tr>
    <tr>
      <td>STATUS </td>
      <td>：=%MW4</td>
      <td>// 状态代码</td>
    </tr>
    <tr>
      <td>ADDR_1 </td>
      <td>：=P#DB1.DBX0.0 BYTE 10 </td>
      <td>// 发送到通信伙伴数据区的地址</td>
    </tr>
    <tr>
      <td>SD_1</td>
      <td>：=P#DB3.DBX0.0 BYTE 10 </td>
      <td>// 本地发送数据区</td>
    </tr>
  </tbody>
</table>
<p>&nbsp;</p>
<table width="569" border="0">
  <tbody>
    <tr>
      <td width="130">CALL “GET” </td>
      <td width="167">, %DB2</td>
      <td width="258">//调用 GET，使用背景DB块：DB2</td>
    </tr>
    <tr>
      <td>REQ　</td>
      <td>：=%M0.5</td>
      <td>//系统时钟 1秒脉冲 </td>
    </tr>
    <tr>
      <td>ID </td>
      <td>：=W#16#1</td>
      <td>//连接号，要与连接配置中一致，创建连接时的本地连接号</td>
    </tr>
    <tr>
      <td>NDR </td>
      <td>：=%M2.2</td>
      <td>//为1时，接收到新数据</td>
    </tr>
    <tr>
      <td>ERROR </td>
      <td>：=%M2.3 </td>
      <td>//为1时，有故障发生</td>
    </tr>
    <tr>
      <td>STATUS</td>
      <td>：=%MW6</td>
      <td>//状态代码</td>
    </tr>
    <tr>
      <td>ADDR_1</td>
      <td>：=P#DB2.DBX0.0 BYTE 10 </td>
      <td>//从通信伙伴数据区读取数据的地址</td>
    </tr>
    <tr>
      <td>RD_1</td>
      <td>：=P#DB4.DBX0.0 BYTE 10 </td>
      <td>//本地接收数据地址</td>
    </tr>
  </tbody>
</table>
<h4><strong>4.	监控结果</strong></h4>
<p>通过在 314C 侧编程进行 S7 通信，实现两个 CPU 之间的数据交换，监控结果如图24所示。</p>
<p><img src="images/2-24.jpg" width="764" height="498" /></p>
<p>图24. 监控结果</p>
</body>
</html>
