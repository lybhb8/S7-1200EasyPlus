<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>S7-1200Modbus TCP 服务器V5新功能</title>
<link href="mnp.css" rel="stylesheet" type="text/css">
<link href="mnp.css" rel="stylesheet" type="text/css">
</head>

<body>
<h3>Modbus TCP 服务器指令 MB_SERVER V5.0 新功能概述</h3>
<p>如下图1所示服务器指令 MB_SERVER 从 V5.0 以后增加了三个新功能，分别为：</p>
<ol>
  <li>访问数据块中的数据区域，而不是直接访问 MODBUS 地址</li>
  <li>过程映像区的读访问限制</li>
  <li>统计变量 NDR_immediate 和 DR_immediate</li>
</ol>
<blockquote>
  <p><img src="images/4-01.jpg" alt="" width="611" height="415"></p>

            <p>图1. MB_SERVER 指令</p>

</blockquote>
<p align="left"><strong>SIMATIC S7-1200 使用要求 </strong></p>
<ul>
  <li>   TIA Portal V15 及以上版本</li>
  <li>CPU 固件 V4.2 及以上版本
  </li>
</ul>
<p>对于 Modbus TCP 基础版本 V4.0，请参见：</p>
<ul>
  <li>客户端：<a href="01-Modbus_TCP_V4/01-Client.html">链接</a></li>
  <li>服务器：<a href="01-Modbus_TCP_V4/02-Server.html">链接</a></li>
</ul>
<h3>新功能实验环境和内容</h3>
 <p>在本应用实例中，通过以下产品进行Modbus TCP服务器V5.0新功能编程，实现了访问1217C CPU 中数据块的数据区域以及限制对1217 CPU过程映像区的读访问。</p>
<blockquote>
 <p><strong>软件：</strong></p>
   <blockquote>
     <p>TIA  Professional V16<br>
Modbus Poll<br>
     </p>
 </blockquote>
   <p><strong>硬件：</strong></p>
   <blockquote>
     <p>CPU1217C DC/DC/DC V4.4     </p>
   </blockquote>
 </blockquote>
<h3>新功能通信程序</h3>
 <p><strong>1、指令调用及参数分配</strong></p>
 <blockquote>
   <p>1.1、打开 TIA Portal V16软件，新建一个项目命名为     &quot;ModbusTCP V5.0&quot;，在项目中添加CPU1217C DC/DC/DC V4.4，为以太网接口新建一个子网并设置 IP地址为   &quot;192.168.0.1&quot;，如下图 3 所示。</p>
   <p><img src="images/4-02.jpg" alt="" width="665" height="680"></p>
 

              <p>图2. 分配IP地址</p>

  <p>1.2、在 OB1组织块中添加Modbus TCP Server功能块    &quot;MB_SERVER&quot;，软件将提示会为该 FB块增加一个背景数据块，本例中为
   DB1&quot;MB_SERVER_DB&quot;，如下图3所示。指令各引脚具体含义及如何分配与先前版本一致，请参考<a href="01-Modbus_TCP_V4/02-Server.html">链接</a>。</p>
  <p><img src="images/4-03.jpg" alt="" width="1032" height="373"></p>

                        <p>图3. 指令创建                      </p>

</blockquote>
<p><strong>2、访问数据块中的数据区域</strong></p>
 <blockquote>
   <p>用户可访问数据块中的数据区域，而不用直接访问过程映像和保持性寄存器。在此情况下，必须禁用数据块的&ldquo;优化块访问&rdquo;(Optimized block access)   属性，并且该属性不得单独存在于装载存储器中。</p>
   <p>2.1、创建标准数据块，DB10（Area 1 for Input）、DB11（Area 2 for Input Register）、DB12（Area 3 for Holding Register）、DB13（Area 4 for Holding Register）如下图 4 所示。并修改数据块属性为标准访问数据块，如下图5所示。</p>
<p><img src="images/4-04.jpg" alt="" width="1070" height="653"></p>

                      <p>图4. 创建数据块</p>

   <p><img src="images/4-05.jpg" alt="" width="452" height="350"></p>

           <p>图5. 数据块属性</p>
 
   <p>2.2、分配数据区域及注意事项</p>
   <ul>
     <li>用户最多可在不同数据块中定义八个数据区域，每个数据块只能包含一个数据区域。单个MODBUS 请求只能对恰好一个数据区域进行读写操作。每个数据区域对应于一个 
       MODBUS 地址区域。可以在MB_SERVER背景数据块的静态变量中&quot;Data_Area_Array&quot;中定义数据区域。<br>
     </li>
     <li>如果要使用的数据区域不到八个，则所需数据区域必须紧密相连，没有间隙。在处理过程中，数据区域中的第一个空白条目会终止数据区域搜索。例如，如果已定义字段元素
       1、2、4 和 5，由于字段元素 3 留空，则&quot;Data_Area_Array&quot;只会识别字段元素 1 和 2。<br>
     </li>
     <li>如果 MODBUS 请求到达时尚未定义相应功能代码的 MODBUS   数据类型的数据区域，请求会按之前的指令版本处理，即直接访问过程映像和保持性寄存器。如果已为功能代码的 MODBUS 数据类型定义了数据区域，则指令 MB_SERVER   可对该数据区域进行读写操作。具体是读操作还是写操作取决于作业类型。<u><strong>如果有两个区域都是03呢，是否会读写搞混了？</strong></u><strong>测试一下功能码1和15可以放在2个功能区吗，并且起始地址和长度一样</strong></li>
     <li>单个 MODBUS 请求只能对一个数据区域进行读写操作。如果要读取覆盖多个数据区域的保持性寄存器，则需要多个 MODBUS 请求。</li>
   </ul>
   <p>Data_Area_Array 字段包含八个元素：Data_Area_Array[1] 到 Data_Area_Array[8]，每个字段元素 Data_Area_Array[x]（其中 1 &lt;= x &lt;= 8）都是 MB_DataArea  类型的
   UDT，结构如下表1。</p>
   <p>表1：Data_Area_Array结构</p>
   <table width="800" border="1">
     <tr>
       <th scope="col">参数</th>
       <th scope="col">数据类型</th>
       <th scope="col">含义</th>
     </tr>
     <tr>
       <th scope="row">data_type</th>
       <td>UInt</td>
       <td><div align="left">映射到此数据区域的 MODBUS 数据类型的标识符： <br />
         &bull;  0：空字段元素或未使用数据区域的标识符。此时，db、start和length的值无效。 <br />
         &bull;  1：过程映像输出（与功能代码 1、5 和 15 一起使用） <br />
         &bull;  2：过程映像输入（与功能代码 2 一起使用） <br />
         &bull;  3：保持寄存器（与功能代码 3、6 和 16 一起使用） <br />
         &bull;  4：输入寄存器（与功能代码 4 一起使用） </div></td>
     </tr>
     <tr>
       <th scope="row">db</th>
       <td>UInt</td>
       <td><div align="left">映射的数据区编号，该DB必须是非优化DB</div></td>
     </tr>
     <tr>
       <th scope="row">start</th>
       <td>UInt</td>
       <td><div align="left">映射到数据块中的首个 MODBUS 地址，从0开始</div></td>
     </tr>
     <tr>
       <th scope="row">length</th>
       <td>UInt</td>
       <td><div align="left">Bool数（对于data_type 1或者2），Word数（data_type 3或者4）</div></td>
     </tr>
   </table>
   <p>本例中使用了4个区域，进入MB_SERVER背景数据块DB1&ldquo;MB_SERVER_DB&rdquo;的静态变量中Data_Area_Arry，分别为区域1访问输入位、区域2访问输入字、区域3访问保持寄存器、区域4访问保持寄存器、区域5~8保持默认为0，如下图6所示。</p>
<p><img src="images/4-06.jpg" alt="" width="1008" height="737"></p>

                      <p>图6. 数据区域</p>

   <p>2.3、仿真软件设置，如下图7-8所示。</p>
   <p><img src="images/4-07.jpg" alt="" width="424" height="396"></p>

           <p>图7. 通信配置</p>

   <p><img src="images/4-08.jpg" alt="" width="1277" height="389"></p>

                               <p>图8. 读写配置</p>

<p>2.4、测试结果，如下图9所示。</p>
<p><img src="images/4-09.jpg" alt="" width="1070" height="686"></p>

                      <p>图9. 测试结果</p>

</blockquote>
<p><strong>3、过程映像区的读访问限制</strong></p>
 <blockquote>
  <p>对于 MB_SERVER 指令V5.0及以上版本，用户可在过程映像输入中定义一个区域，在过程映像输出中定义一个区域，方便远程 MODBUS 设备   进行读访问。随后，远程 MODBUS 设备便不能对超出这些过程映像区域的地址进行读访问。</p>
  <p>背景数据块的以下静态变量定义了过程映像中的读取区域：</p>
  <ul>
    <li>QB_Read_Start：可由远程 MODBUS 设备读取的过程映像输出中的第一个字节的地址（应用于功能代码 1）</li>
    <li>QB_Read_Count：可由远程 MODBUS 设备读取的过程映像输出中的字节数（应用于功能代码 1）</li>
    <li>IB_Read_Start：可由远程 MODBUS 设备读取的过程映像输入中的第一个字节的地址（应用于功能代码 2 和 4） </li>
    <li>IB_Read_Count：可由远程 MODBUS 设备读取的过程映像输入中的字节数（应用于功能代码 2 和 4） </li>
  </ul>
<p>下表2介绍了指令 MB_SERVER 背景数据块中的上述静态变量，可用于定义过程映像中的读区域。为确保完整性，表格中还列出了自版本 V4.2 起，用于定义过程映像中的写区域的静态变量（QB_Start 和 QB_Count）。</p>
<p>表2 读访问限制变量 </p>
<table width="800" border="1">
<tr>
                 <th scope="col">变量</th>
                 <th width="80" scope="col">数据类型</th>
                 <th width="80" scope="col">默认值</th>
                 <th scope="col">说明</th>
                 <th scope="col">版本</th>
               </tr>
               <tr>
                 <th scope="row">QB_Start</th>
                 <td width="80">UInt</td>
                 <td width="80">0</td>
                 <td><div align="left">CPU 可写入的输出字节的起始地址</div></td>
                 <td>V4</td>
               </tr>
               <tr>
                 <th scope="row">QB_Count</th>
                 <td width="80">UInt</td>
                 <td width="80">65535</td>
                 <td><div align="left">
                   <p>CPU 可写入的输出字节的字节数。</p>
                   <p>如果 QB_Count = 0，则CPU 的输出字节均无法写入。</p>
                 </div></td>
                 <td>V4</td>
               </tr>
               <tr>
                 <th scope="row">QB_Read_Start</th>
                 <td width="80">UInt</td>
                 <td width="80">0</td>
                 <td><div align="left">CPU 可读取的输出字节的起始地址</div></td>
                 <td>V5</td>
               </tr>
               <tr>
                 <th scope="row">QB_Read_Count</th>
                 <td width="80">UInt</td>
                 <td width="80">65535</td>
                 <td><div align="left">
                   <p>CPU 可读取的输出字节的字节数。</p>
                   <p>如果 QB_Read_Count = 0，则CPU 的输出字节均无法读取。</p>
                 </div></td>
                 <td>V5</td>
               </tr>
               <tr>
                 <th scope="row">IB_Read_Start</th>
                 <td width="80">UInt</td>
                 <td width="80">0</td>
                 <td><div align="left">CPU 可读取的输入字节的起始地址</div></td>
                 <td>V5</td>
               </tr>
               <tr>
                 <th scope="row">IB_Read_Count </th>
                 <td width="80">UInt</td>
                 <td width="80">65535</td>
                 <td><div align="left">
                   <p>CPU 可读取的输入字节的字节数。</p>
                   <p>如果 IB_Read_Count = 0，CPU 的输入字节均无法读取。</p>
                 </div></td>
                 <td>V5</td>
               </tr>
   </table>
   <p>3.1、本例中定义过程映像中读取区域如下图9所示，输出过程映像写访问权限QB0~QB9，输出过程映像读访问权限QB10~QB19，输入过程映像读访问权限IB20~IB29。</p>
   <p><img src="images/4-10.jpg" width="920" height="405"></p>

                     <p>图9. 过程映像区域设定</p>

   <p>3.2、仿真软件设置，如下图10所示。</p>
   <p><img src="images/4-07.jpg" width="424" height="396"></p>

         <p>图10. 通信设置</p>

   <p>3.3、测试结果</p>
   <p><img src="images/4-11.jpg" alt="" width="952" height="439"></p>

                 <p>图11. 读取Q区数据</p>

<p><img src="images/4-12.jpg" alt="" width="1015" height="445"></p>

                     <p>图12. 读取I区数据</p>

 </blockquote>
<p><strong>4、统计变量 NDR_immediate 和 DR_immediate</strong><br>
 </p>
 <blockquote>
   <p>指令 MB_SERVER（自指令版本 V5.0 起）的背景数据块中含有统计变量 NDR_immediate 和 DR_immediate。</p>
   <p>表3：NDR_immediate 和 DR_immediate。</p>
   <table width="800" border="1">
     <tr>
       <th scope="col">变量</th>
       <th scope="col">数据类型</th>
       <th scope="col">默认值</th>
       <th scope="col">说明</th>
     </tr>
     <tr>
       <th scope="col">NDR_immediate</th>
       <td><p>Bool</p></td>
       <td >False</td>
       <td >与参数 NDR（新数据就绪）含义相同。MB_SERVER 在处理 <br>
       Modbus TCP 写请求的同一调用中更新&quot;NDR_immediate&quot;。</td>
     </tr>
     <tr>
       <th scope="row">DR_immediate</th>
       <td>Bool</td>
       <td>False</td>
       <td>与参数 DR（数据读取）含义相同。MB_SERVER 在处理 <br>
       Modbus TCP 写请求的同一调用中更新&quot;DR_immediate&quot;。</td>
     </tr>
   </table>

</blockquote>
</body>
</html>
